env:
  DPI: 100
  P: 4
name: CI

on:
  push:
    branches:
      - 'master*'
  pull_request:
  # Run daily at 0:01 UTC
  schedule:
  - cron:  '1 0 * * *'
  workflow_dispatch:

jobs:
  testA:
    name: "üêç ${{ matrix.python-version }} ‚Ä¢ Test A ‚Ä¢ ${{ matrix.runs-on }}"
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        runs-on: [ubuntu-latest]
        python-version: ["3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}


    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel pytest-github-actions-annotate-failures
        python -m pip install -q --no-cache-dir -e .[all]
        python -m pip list

    - name: Run combine_postfits A
      run: |
        cd tests
        bash test.sh A

    - name : Run image checks A
      run: |
        cd tests
        python test.py
        python -m pytest -rsx -n auto test.py

    - name: Upload pytest test results
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: "results-${{ matrix.python-version }}-TestA-${{ matrix.runs-on }}"
        retention-days: 3
        path: tests/failed

  testAbig:
    name: "üêç ${{ matrix.python-version }} ‚Ä¢ Test A(big) ‚Ä¢ ${{ matrix.runs-on }}"
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        runs-on: [ubuntu-latest]
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}


    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel pytest-github-actions-annotate-failures
        python -m pip install -q --no-cache-dir -e .[all]
        python -m pip list
  

    - name: Run combine_postfits Abig
      run: |
        cd tests
        bash test.sh Abig

    - name : Run image checks Abig
      run: |
        cd tests
        python test.py
        python -m pytest -rsx -n auto test.py

    - name: Upload pytest test results
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: "results-${{ matrix.python-version }}-TestAbig-${{ matrix.runs-on }}"
        retention-days: 3
        path: tests/failed

  testB:
    name: "üêç ${{ matrix.python-version }} ‚Ä¢ Test B ‚Ä¢ ${{ matrix.runs-on }}"
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        runs-on: [ubuntu-latest]
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}


    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel pytest-github-actions-annotate-failures
        python -m pip install -q --no-cache-dir -e .[all]
        python -m pip list
  

    - name: Run combine_postfits B
      run: |
        cd tests
        bash test.sh B

    - name : Run image checks B
      run: |
        cd tests
        python test.py
        python -m pytest -rsx -n auto test.py

    - name: Upload pytest test results
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: "results-${{ matrix.python-version }}-TestB-${{ matrix.runs-on }}"
        retention-days: 3
        path: tests/failed

  testC:
    name: "üêç ${{ matrix.python-version }} ‚Ä¢ Test C ‚Ä¢ ${{ matrix.runs-on }}"
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        runs-on: [ubuntu-latest]
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}


    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel pytest-github-actions-annotate-failures
        python -m pip install -q --no-cache-dir -e .[all]
        python -m pip list
  

    - name: Run combine_postfits C
      run: |
        cd tests
        bash test.sh C

    - name : Run image checks C
      run: |
        cd tests
        python test.py
        python -m pytest -rsx -n auto test.py

    - name: Upload pytest test results
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: "results-${{ matrix.python-version }}-TestC-${{ matrix.runs-on }}"
        retention-days: 3
        path: tests/failed

  testD:
    name: "üêç ${{ matrix.python-version }} ‚Ä¢ Test D ‚Ä¢ ${{ matrix.runs-on }}"
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        runs-on: [ubuntu-latest]
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}


    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel pytest-github-actions-annotate-failures
        python -m pip install -q --no-cache-dir -e .[all]
        python -m pip list


    - name: Run combine_postfits D
      run: |
        cd tests
        bash test.sh D

    - name : Run image checks D
      run: |
        cd tests
        python test.py
        python -m pytest -rsx -n auto test.py


    - name: Upload pytest test results
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: "results-${{ matrix.python-version }}-TestD-${{ matrix.runs-on }}"
        retention-days: 3
        path: tests/failed