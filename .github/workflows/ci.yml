env:
  DPI: 50
  P: 4
name: CI

on:
  push:
    branches:
      - 'master*'
  pull_request:
  # Run daily at 0:01 UTC
  schedule:
  - cron:  '1 0 * * *'

jobs:
  testA:
    name: "üêç ${{ matrix.python-version }} ‚Ä¢ ${{ matrix.runs-on }}"
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        runs-on: [ubuntu-latest]
        python-version: ["3.10", "3.11"]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}


    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel pytest-github-actions-annotate-failures
        python -m pip install -q --no-cache-dir -e .[all]
        python -m pip list

    - name: Run combine_postfits A
      run: |
        cd tests
        combine_postfits --dpi $DPI -i fitDiags/fit_diag_A.root -o outs/plots_A_all --data --unblind  -p $P  
        combine_postfits --dpi $DPI -i fitDiags/fit_diag_A.root -o outs/plots_A --style styles/style_A.yml --data --unblind --sigs hcc,zcc --onto qcd --rmap zcc:z,hcc:r  --cats 'pass:ptbin*pass2016;fail:ptbin*fail*;muCRpass:muonCRpass2016;muCRfail:muonCRfail2016' --bkgs top,other,wqq,wcq,zqq,zbb,hbb   --project-signal 200,0 -p $P

    - name : Run image checks A
      run: |
        cd tests
        python test.py
        python -m pytest -rsx -n auto test.py

  testAbig:
    name: "üêç ${{ matrix.python-version }} ‚Ä¢ ${{ matrix.runs-on }}"
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        runs-on: [ubuntu-latest]
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}


    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel pytest-github-actions-annotate-failures
        python -m pip install -q --no-cache-dir -e .[all]
        python -m pip list
  

    - name: Run combine_postfits Abig
      run: |
        cd tests
        combine_postfits --dpi $DPI -i fitDiags/fit_diag_Abig.root -o outs/plots_Abig_all --data --unblind  -p $P  
        combine_postfits --dpi $DPI -i fitDiags/fit_diag_Abig.root -o outs/plots_Abig --style styles/style_A.yml --data --unblind --sigs hcc,zcc --onto qcd --rmap zcc:z,hcc:r  --cats 'pass16:ptbin*pass2016;fail16:ptbin*fail2016;pass17:ptbin*pass2017;fail17:ptbin*fail2017;pass18:ptbin*pass2018;fail18:ptbin*fail2018;pass:ptbin*pass*;fail:ptbin*fail*;muCRpass16:muonCRpass2016;muCRfail16:muonCRfail2016;muCRpass17:muonCRpass2017;muCRfail17:muonCRfail2017;muCRpass18:muonCRpass2018;muCRfail18:muonCRfail2018' --bkgs top,other,wqq,wcq,zqq,zbb,hbb   --project-signal 200,0 -p $P
    

    - name : Run image checks Abig
      run: |
        cd tests
        python test.py
        python -m pytest -rsx -n auto test.py

  testB:
    name: "üêç ${{ matrix.python-version }} ‚Ä¢ ${{ matrix.runs-on }}"
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        runs-on: [ubuntu-latest]
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}


    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel pytest-github-actions-annotate-failures
        python -m pip install -q --no-cache-dir -e .[all]
        python -m pip list
  

    - name: Run combine_postfits B
      run: |
        cd tests
        combine_postfits --dpi $DPI -i fitDiags/fit_diag_B.root -o outs/plots_B_all --MC  -p $P  
        combine_postfits --dpi $DPI -i fitDiags/fit_diag_B.root --data --unblind -o outs/plots_B --style styles/style_B.yml  --xlabel 'Jet $m_{SD}$' --sigs b150,m150 --project-signals 2,2 --rmap 'm150:r_q,b150:r_b' --bkgs top,vlep,wqq,zqq,zbb,hbb --onto 2017_qcd --cats 'fail:ptbin*fail;passlow:ptbin*high*;passhigh:ptbin*passlow*'   -p $P


    - name : Run image checks B
      run: |
        cd tests
        python test.py
        python -m pytest -rsx -n auto test.py
 
  testC:
    name: "üêç ${{ matrix.python-version }} ‚Ä¢ ${{ matrix.runs-on }}"
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        runs-on: [ubuntu-latest]
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}


    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel pytest-github-actions-annotate-failures
        python -m pip install -q --no-cache-dir -e .[all]
        python -m pip list
  

    - name: Run combine_postfits C
      run: |
        cd tests
        combine_postfits --dpi $DPI -i fitDiags/fit_diag_B.root -o outs/plots_B_all --MC  -p $P  
        combine_postfits --dpi $DPI -i fitDiags/fit_diag_B.root --data --unblind -o outs/plots_B --style styles/style_B.yml  --xlabel 'Jet $m_{SD}$' --sigs b150,m150 --project-signals 2,2 --rmap 'm150:r_q,b150:r_b' --bkgs top,vlep,wqq,zqq,zbb,hbb --onto 2017_qcd --cats 'fail:ptbin*fail;passlow:ptbin*high*;passhigh:ptbin*passlow*'   -p $P
        

    - name : Run image checks C
      run: |
        cd tests
        python test.py
        python -m pytest -rsx -n auto test.py

  testD:
    name: "üêç ${{ matrix.python-version }} ‚Ä¢ ${{ matrix.runs-on }}"
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        runs-on: [ubuntu-latest]
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}


    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel pytest-github-actions-annotate-failures
        python -m pip install -q --no-cache-dir -e .[all]
        python -m pip list


    - name: Run combine_postfits D
      run: |
        cd tests
        combine_postfits --dpi $DPI -i fitDiags/fit_diag_D.root -o outs/plots_D_all --MC   -p $P
        combine_postfits --dpi $DPI -i fitDiags/fit_diag_D.root -o outs/plots_D --MC --style styles/style_D.yml --onto qcd --sigs VH --bkgs qcd,top,Wjets,Zjets,VV,H  --rmap 'VH:rVH' --project-signals 3 --xlabel 'Jet $m_{SD}$' -p $P --vv
    

    - name : Run image checks D
      run: |
        cd tests
        python test.py
        python -m pytest -rsx -n auto test.py

      